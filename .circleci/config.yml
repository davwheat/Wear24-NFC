version: 2
jobs:
  build:
    machine:
      image: circleci/classic:latest
      
      

    steps:
      - checkout
      # Set git identifiers
      - run:
          name: Build Setup
          command: |
            git config user.email "test@example.com"
            git config user.name "CircleCI"
      # Run build script
      - run:
          name: Kernel Build
          command: |
            ./build.sh -n
      # Check to see if we're on release; if so, npm ini release-it
      - run:
          name: Check Branch
          command: |
            if [ "$CIRCLE_BRANCH" = "release" ]; then
curl https://github.com/tcnksm/ghr/releases/download/v0.12.2/ghr_v0.12.2_linux_amd64.tar.gz
tar -xvf ghr_v0.12.2_linux_amd64.tar.gz .
chmod +x ghr_v0.12.2_linux_amd64/ghr
echo $(version_increment $(cat .circleci/version)) > .circleci/version
ghr_v0.12.2_linux_amd64/ghr -t ${JARED_API_KEY} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${.circleci/version} ./boot-image/out/
      # GC is disabled in Circle -- it is good to GC before caching source
      # https://circleci.com/docs/2.0/caching/#source-caching
      - run:
          name: Clean up
          command: |
            git gc
            make clobber
      # Save cache
      - save_cache:
          key: ccache-cache-cache-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - "~/.ccache"
      - save_cache:
          key: repo-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - "./"
